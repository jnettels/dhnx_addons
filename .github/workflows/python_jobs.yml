name: Python Jobs

on: [push, pull_request]

jobs:
  job_1:
    runs-on: ${{ matrix.os }}
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - name: Checkout
      uses: actions/checkout@v1  # use the latest code commit

    - name: Setup conda with python ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        activate-environment: work
        environment-file: environment_dev.yaml
        python-version: ${{ matrix.python-version }}

    - name: Lint with flake8
      shell: pwsh  # Needed where conda env is used
      if: runner.os == 'Linux'  # Only needs to run once
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install solver cbc (Windows)
      if: runner.os == 'Windows'
      run: echo y | python dhnx_addons/cbc_installer.py

    - name: Install solver cbc (Linux)
      if: runner.os == 'Linux'
      run: sudo apt install coinor-cbc -y

    - name: Run OpenStreetMap example workflow
      shell: pwsh  # Needed where conda env is used
      run: |
        cd dhnx_addons
        python dhnx_addons.py

  job_2:
    runs-on: ${{ matrix.os }}
    name: Conda Build
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ["3.10", "3.11"]

    steps:
    - name: Checkout
      uses: actions/checkout@v1  # use the latest code commit

    - name: Setup conda with python ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        activate-environment: work
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies with conda
      shell: pwsh  # Needed where conda env is used
      run: |
        conda install conda-build setuptools setuptools_scm -c defaults

    - name: Install solver cbc (Windows)
      if: runner.os == 'Windows'
      run: echo y | python dhnx_addons/cbc_installer.py

    - name: Install solver cbc (Linux)
      if: runner.os == 'Linux'
      run: sudo apt install coinor-cbc -y

    - name: Build with conda
      shell: pwsh  # Needed where conda env is used
      run: |
        conda build conda.recipe -c jnettels -c conda-forge -c defaults
