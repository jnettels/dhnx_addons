# If conda activate does not work in PowerShell, use this command:
# conda init powershell

# This file may be used to create an environment using:
# conda env create --file environment.yaml

# Keep pip installations to a minimum, and install
# dependencies with conda instead. To test, use:
# pip install oemof --dry-run

# Common errors:

# "Cannot mix incompatible Qt library (5.15.8) with this library (5.15.6)"

# Qt is a library for graphical user interfaces.
# This error can occur when you have separate conda environments with
# different versions of the package "PyQt5". It should be solved by
# making sure your new environments use the same version as your base
# environment.
# In the example above, we can run the command
# "conda list qt"
# to find the actual package name that causes the issue and then
# "conda install qt-main==5.15.6"

name: work
channels:
    - jnettels
    - conda-forge
dependencies:
    - python=3.10
    - pip
    - pandas
    - numpy
    - numba
    - geopandas
    - matplotlib
    - osmnx
    - coolprop
    - fiona
    - gdal >= 3.7  # Fix for CityGML
    - rasterio
    - tobler
    - h3-py
    - contextily
    - libpysal
    - shapely
    - pygeos
    - openpyxl
    - fuzzywuzzy
    - owslib
    
    # From channel jnettels
    - lpagg
    - trnpy

    # Setuptools is required when using a cloned dhnx_addons repository
    # (without actually installing it). Together with git, which must
    # also be installed, it determines the package version in __init__.py.
    - setuptools_scm

    # To allow "conda develop"
    - conda-build

    # For SQL stuff:
    # sqlalchemy
    # geoalchemy2
    # psycopg2

    # Spyder dependencies: (If you want to activate the environment in Spyder)
    # spyder-kernels=2.4  # Version number is provided by a spyder messsage

    # dhnx/oemof dependencies:
    - PyUtilib
    - Pyomo
    - addict
    - blinker
    - dill
    - nose

    # pandapipes dependencies
    - deepdiff

    # Specify automatic pip installations
    - pip:
        - oemof-network
        - oemof.solph==0.5.0  # oemof-solph-0.5.1 introduces an error
        - oemof-tools
        # - pandapipes  # building wheels fails sometimes
        # - dhnx  # Install from https://github.com/oemof/DHNx
        # - demandlib  # Install from https://github.com/jnettels/demandlib/tree/features/add-vdi-from-lpagg


# run manual pip installations afterwards
# check with dry run first, to install missing packages with conda
# pip install oemof.network oemof.solph oemof.tools --dry-run

# for dhnx, you can manually download the latest
# version from the 'dev' branch of https://github.com/oemof/DHNx
# and run
# pip install -e <path to DHNx>
# or
# conda develop <path to DHNx>
#
# As of May 2023, it should be save to install dhnx 0.0.3 directly
# pip install dhnx==0.0.3 --dry-run

# Pandapipes needs to be installed from pip
# pip install pandapipes --dry-run
